{
  "uid" : "9b56af2caf36169d",
  "name" : "test_addenterprise03",
  "fullName" : "testcase.test_enteripse.Testenterprise#test_addenterprise03",
  "historyId" : "1faf892aa02ca937d2b5b0556fa49915",
  "time" : {
    "start" : 1600237825664,
    "stop" : 1600237825667,
    "duration" : 3
  },
  "status" : "broken",
  "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL '/basic/v2/employee/2264': No schema supplied. Perhaps you meant http:///basic/v2/employee/2264?",
  "statusTrace" : "self = <testcase.test_enteripse.Testenterprise object at 0x03ACA2B0>\n\n    def test_addenterprise03(self):          #删除子企业员工\n        case_data = get_test_data(self.excel_data,'delenterprise')\n        updatetoken(self.token, case_data)\n        takeid = re.findall(r'/basic/v2/employee/(.*)', case_data[\"url\"])\n        sumid = str(int(takeid[0]) + 1)\n        data = json.loads(case_data['data'])\n        id = {\"id\": sumid}\n        data.update(id)\n        case_data['data'] = json.dumps(data)\n        new_url = \"/basic/v2/employee/\"+sumid\n        case_data[\"url\"] = new_url\n>       res = send_request(case_data)\n\ntestcase\\test_enteripse.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommen\\send_request.py:34: in send_request\n    res = run_main(method, url, data, headers)\ncommen\\send_request.py:20: in run_main\n    res = requests.delete(url=url, data=data, headers=json.loads(headers)).json()\nvenv\\lib\\site-packages\\requests\\api.py:161: in delete\n    return request('delete', url, **kwargs)\nvenv\\lib\\site-packages\\requests\\api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:516: in request\n    prep = self.prepare_request(req)\nvenv\\lib\\site-packages\\requests\\sessions.py:459: in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\nvenv\\lib\\site-packages\\requests\\models.py:314: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [DELETE]>, url = '/basic/v2/employee/2264'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL '/basic/v2/employee/2264': No schema supplied. Perhaps you meant http:///basic/v2/employee/2264?\n\nvenv\\lib\\site-packages\\requests\\models.py:388: MissingSchema",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_token_class",
    "time" : {
      "start" : 1600237825460,
      "stop" : 1600237825460,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "addoption_env",
    "time" : {
      "start" : 1600237825451,
      "stop" : 1600237825451,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "pytestconfig",
    "time" : {
      "start" : 1600237825450,
      "stop" : 1600237825450,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "do_login",
    "time" : {
      "start" : 1600237825214,
      "stop" : 1600237825450,
      "duration" : 236
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "get_excel",
    "time" : {
      "start" : 1600237825460,
      "stop" : 1600237825460,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "env",
    "time" : {
      "start" : 1600237825451,
      "stop" : 1600237825460,
      "duration" : 9
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL '/basic/v2/employee/2264': No schema supplied. Perhaps you meant http:///basic/v2/employee/2264?",
    "statusTrace" : "self = <testcase.test_enteripse.Testenterprise object at 0x03ACA2B0>\n\n    def test_addenterprise03(self):          #删除子企业员工\n        case_data = get_test_data(self.excel_data,'delenterprise')\n        updatetoken(self.token, case_data)\n        takeid = re.findall(r'/basic/v2/employee/(.*)', case_data[\"url\"])\n        sumid = str(int(takeid[0]) + 1)\n        data = json.loads(case_data['data'])\n        id = {\"id\": sumid}\n        data.update(id)\n        case_data['data'] = json.dumps(data)\n        new_url = \"/basic/v2/employee/\"+sumid\n        case_data[\"url\"] = new_url\n>       res = send_request(case_data)\n\ntestcase\\test_enteripse.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommen\\send_request.py:34: in send_request\n    res = run_main(method, url, data, headers)\ncommen\\send_request.py:20: in run_main\n    res = requests.delete(url=url, data=data, headers=json.loads(headers)).json()\nvenv\\lib\\site-packages\\requests\\api.py:161: in delete\n    return request('delete', url, **kwargs)\nvenv\\lib\\site-packages\\requests\\api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:516: in request\n    prep = self.prepare_request(req)\nvenv\\lib\\site-packages\\requests\\sessions.py:459: in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\nvenv\\lib\\site-packages\\requests\\models.py:314: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [DELETE]>, url = '/basic/v2/employee/2264'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL '/basic/v2/employee/2264': No schema supplied. Perhaps you meant http:///basic/v2/employee/2264?\n\nvenv\\lib\\site-packages\\requests\\models.py:388: MissingSchema",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f86f196a8e0c3dbe",
      "name" : "stdout",
      "source" : "f86f196a8e0c3dbe.txt",
      "type" : "text/plain",
      "size" : 24
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_enteripse"
  }, {
    "name" : "subSuite",
    "value" : "Testenterprise"
  }, {
    "name" : "host",
    "value" : "TX5C3S1L7D31UYD"
  }, {
    "name" : "thread",
    "value" : "20404-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_enteripse"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "9b56af2caf36169d.json",
  "parameterValues" : [ ]
}