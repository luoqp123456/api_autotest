{"name": "test_addenterprise01", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidHeader: Value for header {Authorization: []} must be of type str or bytes, not <class 'list'>", "trace": "header = ('Authorization', [])\n\n    def check_header_validity(header):\n        \"\"\"Verifies that header value is a string which doesn't contain\n        leading whitespace or return characters. This prevents unintended\n        header injection.\n    \n        :param header: tuple, in the format (name, value).\n        \"\"\"\n        name, value = header\n    \n        if isinstance(value, bytes):\n            pat = _CLEAN_HEADER_REGEX_BYTE\n        else:\n            pat = _CLEAN_HEADER_REGEX_STR\n        try:\n>           if not pat.match(value):\nE           TypeError: expected string or bytes-like object\n\nvenv\\lib\\site-packages\\requests\\utils.py:946: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_enteripse.Testenterprise object at 0x047C3490>\n\n    @allure.step(\"登录，组织架构中点击进行添加子企业\")\n    @allure.description(\"组织架构，添加子企业与员工\")\n    def test_addenterprise01(self):                #添加子企业与员工\n        case_data = get_test_data(self.excel_data, 'addenterprise')  # 从数据列表中查找到该用例数据\n        updatetoken(self.token, case_data)\n>       res = send_request(case_data)\n\ntestcase\\test_enteripse.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommen\\send_request.py:34: in send_request\n    res = run_main(method, url, data, headers)\ncommen\\send_request.py:16: in run_main\n    res = requests.post(url=url, data=data, headers=json.loads(headers)).json()\nvenv\\lib\\site-packages\\requests\\api.py:119: in post\n    return request('post', url, data=data, json=json, **kwargs)\nvenv\\lib\\site-packages\\requests\\api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:516: in request\n    prep = self.prepare_request(req)\nvenv\\lib\\site-packages\\requests\\sessions.py:459: in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\nvenv\\lib\\site-packages\\requests\\models.py:315: in prepare\n    self.prepare_headers(headers)\nvenv\\lib\\site-packages\\requests\\models.py:449: in prepare_headers\n    check_header_validity(header)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nheader = ('Authorization', [])\n\n    def check_header_validity(header):\n        \"\"\"Verifies that header value is a string which doesn't contain\n        leading whitespace or return characters. This prevents unintended\n        header injection.\n    \n        :param header: tuple, in the format (name, value).\n        \"\"\"\n        name, value = header\n    \n        if isinstance(value, bytes):\n            pat = _CLEAN_HEADER_REGEX_BYTE\n        else:\n            pat = _CLEAN_HEADER_REGEX_STR\n        try:\n            if not pat.match(value):\n                raise InvalidHeader(\"Invalid return character or leading space in header: %s\" % name)\n        except TypeError:\n            raise InvalidHeader(\"Value for header {%s: %s} must be of type str or \"\n>                               \"bytes, not %s\" % (name, value, type(value)))\nE           requests.exceptions.InvalidHeader: Value for header {Authorization: []} must be of type str or bytes, not <class 'list'>\n\nvenv\\lib\\site-packages\\requests\\utils.py:950: InvalidHeader"}, "description": "组织架构，添加子企业与员工", "steps": [{"name": "登录，组织架构中点击进行添加子企业", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidHeader: Value for header {Authorization: []} must be of type str or bytes, not <class 'list'>\n", "trace": "  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\testcase\\test_enteripse.py\", line 22, in test_addenterprise01\n    res = send_request(case_data)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\commen\\send_request.py\", line 34, in send_request\n    res = run_main(method, url, data, headers)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\commen\\send_request.py\", line 16, in run_main\n    res = requests.post(url=url, data=data, headers=json.loads(headers)).json()\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\venv\\lib\\site-packages\\requests\\api.py\", line 119, in post\n    return request('post', url, data=data, json=json, **kwargs)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\venv\\lib\\site-packages\\requests\\api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\venv\\lib\\site-packages\\requests\\sessions.py\", line 516, in request\n    prep = self.prepare_request(req)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\venv\\lib\\site-packages\\requests\\sessions.py\", line 459, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\venv\\lib\\site-packages\\requests\\models.py\", line 315, in prepare\n    self.prepare_headers(headers)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\venv\\lib\\site-packages\\requests\\models.py\", line 449, in prepare_headers\n    check_header_validity(header)\n  File \"C:\\Users\\Administrator\\PycharmProjects\\pytest\\venv\\lib\\site-packages\\requests\\utils.py\", line 950, in check_header_validity\n    \"bytes, not %s\" % (name, value, type(value)))\n"}, "start": 1600854497129, "stop": 1600854497130}], "start": 1600854497129, "stop": 1600854497140, "uuid": "9785956c-5447-4618-afa8-31415516e728", "historyId": "55e8f74e1962822065b2e910b7ef7eff", "testCaseId": "f17a5f5a3669002dbfdac25f661aa036", "fullName": "testcase.test_enteripse.Testenterprise#test_addenterprise01", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_enteripse"}, {"name": "subSuite", "value": "Testenterprise"}, {"name": "host", "value": "TX5C3S1L7D31UYD"}, {"name": "thread", "value": "21140-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_enteripse"}]}